"use strict";var vapormall=(()=>{var L=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var R=(i,e)=>{for(var t in e)L(i,t,{get:e[t],enumerable:!0})},D=(i,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of I(e))!P.call(i,n)&&n!==t&&L(i,n,{get:()=>e[n],enumerable:!(a=N(e,n))||a.enumerable});return i};var b=i=>D(L({},"__esModule",{value:!0}),i);var v={};R(v,{Battle:()=>u,CONSTANTS:()=>s,GameState:()=>T,IndividualSoul:()=>p,Manager:()=>k,SKILL_LIST:()=>d,SOUL_LIST:()=>f,Skill:()=>h});var s;(n=>{let i;(c=>(c.HP="HP",c.ATTACK="attack",c.DEFENSE="defense",c.GLITCHATTACK="glitch attack",c.GLITCHDEFENSE="glitch defense",c.SPEED="speed"))(i=n.STATS||={});let e;(m=>(m.NORMALDAMAGE="normal damage",m.GLITCHDAMAGE="glitch damage",m.STATUS="status"))(e=n.SKILLCATEGORIES||={});let t;(c=>(c.TYPELESS="typeless",c.SWEET="sweet",c.EDGE="edge",c.CORPORATE="corporate",c.SANGFROID="sangfroid",c.ERROR="error"))(t=n.TYPES||={});let a;(o=>(o[o.SELECTED=0]="SELECTED",o[o.OPPOSING=1]="OPPOSING",o[o.ALLIED=2]="ALLIED",o[o.ALLY=3]="ALLY",o[o.ALL=4]="ALL",o[o.SELF=5]="SELF",o[o.NONE=6]="NONE"))(a=n.TARGETS||={})})(s||={});var d={basic_attack:{name:"Attack",description:"Basic attack.",power:4,max_pp:30,priority:0,stat_changes:[],target:s.TARGETS.SELECTED,type:s.TYPES.TYPELESS,meta:{category:s.SKILLCATEGORIES.NORMALDAMAGE,crit_rate:0,drain:0,healing:0,max_hits:null,max_turns:null,min_hits:null,min_turns:null}},recoil:{name:"Recoil",description:"Restores half the damage dealt.",power:12,max_pp:15,priority:0,stat_changes:[],target:s.TARGETS.SELECTED,type:s.TYPES.ERROR,meta:{category:s.SKILLCATEGORIES.NORMALDAMAGE,crit_rate:0,drain:-33,healing:0,max_hits:null,max_turns:null,min_hits:null,min_turns:null}},drain:{name:"Drain",description:"Restores half the damage dealt.",power:4,max_pp:20,priority:0,stat_changes:[],target:s.TARGETS.SELECTED,type:s.TYPES.TYPELESS,meta:{category:s.SKILLCATEGORIES.NORMALDAMAGE,crit_rate:0,drain:50,healing:0,max_hits:null,max_turns:null,min_hits:null,min_turns:null}},dazzling_polish:{name:"Dazzling Polish",description:"Polish simulated aesthetics for enhanced beauty. Raise Offense, Glitch Offense.",power:null,max_pp:15,priority:0,stat_changes:[{change:1,stat:s.STATS.ATTACK,target:s.TARGETS.SELF},{change:1,stat:s.STATS.GLITCHATTACK,target:s.TARGETS.SELF}],target:s.TARGETS.SELF,type:s.TYPES.SWEET,meta:{category:s.SKILLCATEGORIES.STATUS,crit_rate:0,drain:0,healing:0,max_hits:null,max_turns:null,min_hits:null,min_turns:null}}};var f={Adware:{name:"ADWARE",description:"Churning glut of incoherence.",stats:{[s.STATS.HP]:20,[s.STATS.ATTACK]:10,[s.STATS.DEFENSE]:10,[s.STATS.GLITCHATTACK]:10,[s.STATS.GLITCHDEFENSE]:7,[s.STATS.SPEED]:8},sprites:{front:"temp.gif",back:"temp.gif"},types:[s.TYPES.ERROR],levelUp:[{level:1,learnedSkills:[d.basic_attack,d.recoil]},{level:2,statChanges:[{stat:s.STATS.SPEED,change:6}],learnedSkills:[d.dazzling_polish]},{level:3,statChanges:[{stat:s.STATS.DEFENSE,change:6}]},{level:4,statChanges:[{stat:s.STATS.HP,change:6}],learnedSkills:[d.drain]},{level:5,statChanges:[{stat:s.STATS.GLITCHDEFENSE,change:3},{stat:s.STATS.DEFENSE,change:3}]}]}};var A=class{constructor(e){this.soul=e,this.selected_skill=null,this.selected_target=null,this.stat_changes={[s.STATS.HP]:0,[s.STATS.ATTACK]:0,[s.STATS.DEFENSE]:0,[s.STATS.GLITCHATTACK]:0,[s.STATS.GLITCHDEFENSE]:0,[s.STATS.SPEED]:0},this.displayHP=this.soul.currentHP,this.hpText=document.createElement("small"),this.hpText.append(document.createTextNode(this.getHPString())),this.infoContainer=this.genInfoContainer(),document.getElementById("tophalf")?.append(this.infoContainer),this.index=0}genInfoContainer(){let e=this.genInfoDiv(),t=this.genDetailedInfo(),a=document.createElement("div");return a.append(e),a.append(t),e.onmouseover=function(){t.style.display="block"},e.onmouseout=function(){t.style.display="none"},this.detailedInfoDiv=t,a}genInfoDiv(){let e=document.createElement("div"),t=document.createTextNode(this.soul.name);return e.append(t),e.append(document.createElement("br")),e.append(this.hpText),e}genDetailedInfo(){let e=document.createElement("div");e.classList.add("soul-tip","outlineDiv","hoverDiv");let t=document.createTextNode(this.soul.name);e.append(t,document.createElement("br"));let a=document.createElement("small");return this.soul.soul_species.types.forEach((n,r)=>{a.innerText+=n+"/"}),e.append(a),e.append(document.createElement("hr")),this.statInfo=this.genStatInfo(),e.append(this.statInfo),e}hasModifiers(){for(let e in this.soul.stats){let t=e;if(this.stat_changes[t]!==0)return!0}return!1}genStatInfo(){let e=document.createElement("div");if(e.append(this.genStatText(!1)),this.hasModifiers()){let t=document.createElement("small");t.append(document.createElement("br"),document.createElement("br"),document.createTextNode("(After stat modifiers:)"),document.createElement("br")),e.append(t),e.append(this.genStatText(!0))}return e}genStatText(e){let t=document.createElement("small");for(let a in this.soul.stats)if(a!="HP"){let n=a;t.innerText+=a+" ",e?t.innerText+=this.calculateStat(n):t.innerText+=this.soul.stats[n],t.innerText+=" / "}return t}updateHP(){this.hpText.innerHTML=this.getHPString()}updateStats(){this.statInfo.remove(),this.statInfo=this.genStatInfo(),this.detailedInfoDiv.append(this.statInfo)}getHPString(){return"HP: "+this.displayHP+"/"+this.soul.stats[s.STATS.HP]}calculateStat(e){if(e===s.STATS.HP)return this.soul.stats[e];let t=this.soul.stats[e],a;return this.stat_changes[e]>0?a=(2+this.stat_changes[e])/2:a=2/(2-this.stat_changes[e]),Math.max(Math.floor(t*a),1)}switchOut(){this.infoContainer.remove()}},S=class extends A{constructor(e){super(e),this.infoContainer.classList.add("playerInfo","soulInfo","blackBg")}},E=class extends A{constructor(e){super(e),this.infoContainer.classList.add("enemyInfo","soulInfo","blackBg")}chooseMove(e,t,a){console.log(this.soul.skills);let n=Math.floor(Math.random()*this.soul.skills.length);switch(this.selected_skill=this.soul.skills[n],this.selected_skill.data.target){case s.TARGETS.SELECTED:case s.TARGETS.OPPOSING:let r=Math.floor(Math.random()*t.length);this.selected_target=[t[r]];break;case s.TARGETS.ALLIED:case s.TARGETS.ALLY:case s.TARGETS.SELF:this.selected_target=[this];break;case s.TARGETS.ALL:case s.TARGETS.NONE:break}}};function C(i){return i.charAt(0).toUpperCase()+i.slice(1)}var y=class i{static{this.ENDBLOCK_STRING="ENDBLOCK"}constructor(e,t){let a=document.getElementById("messageContainer");if(a===null){console.error("messageContainer is null! Cannot display messages!");return}this.messages=[],this.messageContainer=a,this.blocks=0,this.timeouts=[],this.skillHandlerCreator=e,this.switchHandlerCreator=t}addMessage(e){this.messages.push(e)}endMessageBlock(){this.messages.push(i.ENDBLOCK_STRING)}displayMessages(){let e=0;this.messages.forEach((t,a)=>{t===i.ENDBLOCK_STRING&&(this.enqueueBlock(this.messages.slice(e,a)),e=a+1)}),this.enqueueBlock(this.messages.slice(e,this.messages.length)),this.messages=[]}enqueueBlock(e){let t=this.blocks*3100,a=setTimeout(()=>{this.displayBlock(e)},t);this.timeouts.push(a),this.blocks++}displayBlock(e){let t=document.createElement("div");t.classList.add("message","blackBg"),this.messageContainer.append(t);let a=0;e.forEach((r,l)=>{let g=a*750;if(typeof r=="string"){let m=setTimeout(()=>{t.append(document.createTextNode(C(r))),t.append(document.createElement("br"))},g);this.timeouts.push(m),a++}else{let m=setTimeout(()=>{r()},g);this.timeouts.push(m)}});let n=setTimeout(()=>{t.remove(),this.blocks--},e.length*750);this.timeouts.push(n)}renderSkills(e){let t=document.createElement("div");t.id="skillContainer";let a=document.createElement("p");a.textContent="AGGRESSION PROTOCOL INITIATED.",t.append(a),e.soul.skills.forEach((n,r)=>{let l=this.makeSkillWrapper(e,n,r);t?.append(l)}),document.getElementById("bottomContainer")?.append(t)}makeSkillWrapper(e,t,a){let n=t.getSkillButton();t.pp>0?n.addEventListener("click",this.skillHandlerCreator(e,a),!1):n.classList.add("noClick");let r=t.getSkillTip();n.onmouseover=function(){r.style.display="block"},n.onmouseout=function(){r.style.display="none"};let l=document.createElement("div");return l.classList.add("skill-wrapper"),l.append(n),l.append(r),l}hideActions(){document.getElementById("bottomContainer")?.remove()}queueShowActions(e,t){let a=setTimeout(()=>{let n=document.createElement("div");n.id="bottomContainer",document.getElementById("bottomhalf")?.append(n),this.renderSkills(e),this.renderSwitch(t)},6200);this.timeouts.push(a)}renderSwitch(e){let t=document.createElement("div");t.id="skillContainer";let a=document.createElement("p");a.textContent="SWITCH ACTIVE PROCESS?",t.append(a),e.forEach((n,r)=>{let l=this.makeSwitchWrapper(n,r);t?.append(l)}),document.getElementById("bottomContainer")?.append(t)}makeSwitchWrapper(e,t){let a=e.getSwitchButton();e.currentHP>0?a.addEventListener("click",this.switchHandlerCreator(0,t),!1):a.classList.add("noClick");let n=document.createElement("div");return n.classList.add("skill-wrapper"),n.append(a),n}endBattle(){document.getElementById("endScreen")?.classList.remove("hidden")}};var u=class i{constructor(e,t){this.playerParty=e,this.enemyParty=t,this.playerSouls=[new S(this.playerParty[0])],this.enemySouls=[new E(this.enemyParty[0])],this.souls=[...this.playerSouls,...this.enemySouls],this.battleOver=!1,this.messageRenderer=new y(this.createSkillClickHandler.bind(this),this.createSwitchClickHandler.bind(this));let a=this.playerSouls[0];this.messageRenderer.renderSkills(a),this.messageRenderer.renderSwitch(this.playerParty)}static getName(e){return e instanceof S?"your "+e.soul.name:"the opposing "+e.soul.name}passTurn(){function e(a,n){return a.calculateStat(s.STATS.SPEED)-n.calculateStat(s.STATS.SPEED)}let t=this.souls.sort(e);for(let a=0;a<t.length;a++)this.useSkill(t[a])}checkBattleOver(){(this.playerSouls.length===0||this.enemySouls.length===0)&&(this.messageRenderer.endMessageBlock(),this.playerSouls.length,this.messageRenderer.addMessage(()=>{this.messageRenderer.endBattle()}))}selectEnemySkills(){for(let e of this.enemySouls)e.chooseMove(this.souls,this.playerSouls,this.enemySouls)}selectPlayerTarget(e){if(e.selected_skill===null){console.error("SELECTING TARGET FOR NULL PLAYER SKILL");return}switch(e.selected_skill.data.target){case s.TARGETS.SELECTED:case s.TARGETS.OPPOSING:e.selected_target=[this.enemySouls[0]];break;case s.TARGETS.ALLIED:e.selected_target=this.playerSouls;break;case s.TARGETS.ALLY:break;case s.TARGETS.ALL:e.selected_target=this.souls;break;case s.TARGETS.SELF:e.selected_target=[e];break;case s.TARGETS.NONE:e.selected_target=[];break}}useSkill(e){let t=e.selected_skill;if(t===null){console.error("Using null skill!");return}if(t.pp<=0){console.error("Using skill with no pp!");return}switch(t.pp--,t.data.target){case s.TARGETS.SELECTED:case s.TARGETS.OPPOSING:case s.TARGETS.ALLIED:case s.TARGETS.ALLY:case s.TARGETS.ALL:case s.TARGETS.SELF:e.selected_target!==null?e.selected_target.forEach(a=>{this.applySkillEffects(e,t,a)}):console.error("No target for move!");break;case s.TARGETS.NONE:break}}applySkillEffects(e,t,a){switch(this.messageRenderer.addMessage(i.getName(e)+" used "+t.data.name+"!"),t.data.meta.category){case s.SKILLCATEGORIES.NORMALDAMAGE:case s.SKILLCATEGORIES.GLITCHDAMAGE:if(t.data.power!==null){let n=this.damageCalc(e,t,a,t.data.meta.category===s.SKILLCATEGORIES.GLITCHDAMAGE),r=1;if(a.soul.soul_species.types.forEach(l=>{r*=this.typeMultiplier(t.data.type,l)}),r===0)this.messageRenderer.addMessage("It didn't affect "+i.getName(a)+"...");else if(n=Math.ceil(n*r),this.messageRenderer.addMessage(()=>{a.displayHP-=n,a.updateHP()}),r>1?this.messageRenderer.addMessage("It's super effective!"):r<1&&this.messageRenderer.addMessage("It's not very effective..."),this.messageRenderer.addMessage(i.getName(a)+" lost "+n+" HP!"),a.soul.changeHP(-n),this.checkFaint(a),t.data.meta.drain!==0){let l=Math.floor(n*(t.data.meta.drain/100));this.messageRenderer.addMessage(()=>{e.displayHP+=l,e.updateHP()}),l>0?this.messageRenderer.addMessage(i.getName(e)+" drained "+l+" HP!"):l<0&&this.messageRenderer.addMessage(i.getName(e)+" lost "+-l+" HP from recoil!"),e.soul.changeHP(l),this.checkFaint(e)}}break;case s.SKILLCATEGORIES.STATUS:t.data.stat_changes.forEach(n=>{if(n.stat===s.STATS.HP)console.error("Stat change for HP not allowed!");else if(a.stat_changes[n.stat]===6)this.messageRenderer.addMessage(i.getName(a)+"'s "+n.stat+" couldn't go any higher!");else if(a.stat_changes[n.stat]===-6)this.messageRenderer.addMessage(i.getName(a)+"'s "+n.stat+" couldn't go any lower!");else{a.stat_changes[n.stat]+=n.change;let r=" ";n.change>0?r+="rose":r+="fell",n.change>1?r+=" "+Math.abs(n.change)+" stages!":r+=" "+Math.abs(n.change)+" stage!",this.messageRenderer.addMessage(()=>{a.updateStats()}),this.messageRenderer.addMessage(i.getName(a)+"'s "+n.stat+r)}});break}this.messageRenderer.endMessageBlock()}checkFaint(e){e.soul.currentHP<=0&&(this.messageRenderer.endMessageBlock(),this.messageRenderer.addMessage(i.getName(e)+" was destroyed!"),this.souls.filter(t=>{t.soul.name,e.soul.name}),e instanceof S?this.playerSouls.splice(this.playerSouls.indexOf(e),1):e instanceof E&&this.enemySouls.splice(this.enemySouls.indexOf(e),1),this.checkBattleOver())}damageCalc(e,t,a,n){if(n){let g=e.calculateStat(s.STATS.GLITCHATTACK)*t.data.power;return Math.ceil(g/a.calculateStat(s.STATS.GLITCHDEFENSE))}let r=e.calculateStat(s.STATS.ATTACK)*t.data.power;return Math.ceil(r/a.calculateStat(s.STATS.DEFENSE))}typeMultiplier(e,t){switch(e){case s.TYPES.TYPELESS:if(t===s.TYPES.ERROR)return 0;break;case s.TYPES.SWEET:if(t===s.TYPES.CORPORATE)return 2;if(t===s.TYPES.EDGE)return .5;break;case s.TYPES.EDGE:if(t===s.TYPES.SWEET)return 2;if(t===s.TYPES.SANGFROID)return .5;break;case s.TYPES.CORPORATE:if(t===s.TYPES.SANGFROID)return 2;if(t===s.TYPES.SWEET)return .5;break;case s.TYPES.SANGFROID:if(t===s.TYPES.EDGE)return 2;if(t===s.TYPES.CORPORATE)return .5;break}return 1}switchSoul(e,t){let a=this.playerSouls[e],n=new S(this.playerParty[t]);return a.switchOut(),this.playerSouls[e]=n,this.messageRenderer.addMessage("Switching out "+i.getName(a)+" for "+n.soul.name),n}createSkillClickHandler(e,t){return()=>{e.selected_skill=e.soul.skills[t],this.messageRenderer.hideActions(),this.selectPlayerTarget(e),this.selectEnemySkills(),this.passTurn(),this.messageRenderer.queueShowActions(e,this.playerParty),this.messageRenderer.displayMessages()}}createSwitchClickHandler(e,t){return()=>{this.messageRenderer.hideActions();let a=this.switchSoul(e,t);this.selectEnemySkills(),this.passTurn(),this.messageRenderer.queueShowActions(a,this.playerParty),this.messageRenderer.displayMessages()}}};var h=class{constructor(e){this.data=e,this.pp=e.max_pp}getSkillButton(){let e=document.createElement("button");e.classList.add("skill-button","outlineDiv");let t="skill-"+this.data.type;e.classList.add(t);let a=document.createTextNode(this.data.name);e.append(a),e.append(document.createElement("br"));let n=document.createElement("small");n.append(document.createTextNode(this.data.type+" ")),e.append(n);let r=document.createElement("small");return r.append(document.createTextNode(this.pp+"/"+this.data.max_pp)),e.append(r),e}getSkillTip(){let e=document.createElement("div");e.classList.add("skill-tip","outlineDiv","hoverDiv");let t=document.createTextNode(this.data.name);e.append(t),e.append(document.createElement("br"));let a=document.createElement("small");a.append(document.createTextNode(this.data.type+" | ")),e.append(a);let n=document.createElement("small");if(n.append(document.createTextNode(this.data.meta.category+" ")),e.append(n),e.append(document.createElement("hr")),this.data.power!==null){let l=document.createElement("small");l.append(document.createTextNode("Power: "+this.data.power)),e.append(l),e.append(document.createElement("hr"))}let r=document.createElement("small");return r.append(document.createTextNode(this.data.description)),e.append(r),e}};var p=class{constructor(e,t){this.soul_species=e,this.name=e.name,this.level=t,this.skills=[],this.stats={[s.STATS.HP]:0,[s.STATS.ATTACK]:0,[s.STATS.DEFENSE]:0,[s.STATS.GLITCHATTACK]:0,[s.STATS.GLITCHDEFENSE]:0,[s.STATS.SPEED]:0},this.initializeStats(),this.levelUpSimulate(),this.currentHP=this.stats[s.STATS.HP]}initializeStats(){for(let e in this.stats){let t=e;this.stats[t]=this.soul_species.stats[t]}}levelUpSimulate(){let e=0;this.soul_species.levelUp.filter(t=>t.level<=this.level).forEach((t,a)=>{t.statChanges!==void 0&&t.statChanges.forEach(n=>{this.stats[n.stat]+=n.change}),t.learnedSkills!==void 0&&t.learnedSkills.forEach(n=>{this.skills[e]=new h(n),e=++e%4})})}changeHP(e){this.currentHP=Math.min(this.stats[s.STATS.HP],this.currentHP+e),this.currentHP=Math.max(0,this.currentHP)}changeName(e){this.name=e}getSwitchButton(){let e=document.createElement("button");e.classList.add("outlineDiv");let t=document.createTextNode(this.name);return e.append(t),e.append(document.createElement("br")),e}};var T=class i{static{this.partySouls=[]}static getPartySouls(){return i.partySouls}static addSoul(e){i.partySouls.push(e)}static removeSoul(e){i.partySouls.splice(this.partySouls.indexOf(e),1)}};var k=class i{static startBattle(){let e=T.getPartySouls(),t=i.generateEnemy();return new u(e,[t])}static generateEnemy(){return new p(f.Adware,1)}};return b(v);})();
